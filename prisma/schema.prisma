// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

generator client {
  provider = "prisma-client-js"
}

model Exchange {
  id                  String               @id @default(uuid())
  name                String
  isAvailable         Boolean
  exchangeCoins       ExchangeCoin[]
  exchangeConnections ExchangeConnection[]
}

model BotCategory {
  id          String @id @default(uuid())
  name        String
  description String
  bots        Bot[]
}

model Timeframe {
  id   String @id @default(uuid())
  name String
  bots Bot[]
}

model ExchangeCoin {
  id         String   @id @default(uuid())
  exchangeId String
  exchange   Exchange @relation(fields: [exchangeId], references: [id], onDelete: Cascade)
  coinId     String
  coin       Coin     @relation(fields: [coinId], references: [id], onDelete: Cascade)

  @@index([exchangeId])
  @@index([coinId])
}

model ExchangeConnection {
  id         String   @id @default(uuid())
  exchangeId String
  exchange   Exchange @relation(fields: [exchangeId], references: [id], onDelete: Cascade)
  userId     String
  user       User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  bots       Bot[]
  publicKey  String
  secretKey  String
  createdAt  DateTime @default(now())

  @@index([exchangeId])
  @@index([userId])
}

model WeightingSetting {
  id   String @id @default(uuid())
  name String
  bots Bot[]
}

model Coin {
  id            String         @id @default(uuid())
  name          String
  iconUrl       String
  botCoins      BotCoin[]
  exchangeCoins ExchangeCoin[]
}

model BotCoin {
  id     String @id @default(uuid())
  botId  String
  bot    Bot    @relation(fields: [botId], references: [id], onDelete: Cascade)
  coinId String
  coin   Coin   @relation(fields: [coinId], references: [id], onDelete: Cascade)
  amount Float

  @@index([botId])
  @@index([coinId])
}

model Bot {
  id                   String             @id @default(uuid())
  name                 String
  color                String
  timeframeId          String
  timeframe            Timeframe          @relation(fields: [timeframeId], references: [id], onDelete: Cascade)
  weightingSettingId   String
  weightingSetting     WeightingSetting   @relation(fields: [weightingSettingId], references: [id], onDelete: Cascade)
  botCategoryId        String
  botCategory          BotCategory        @relation(fields: [botCategoryId], references: [id], onDelete: Cascade)
  exchangeConnectionId String
  exchangeConnection   ExchangeConnection @relation(fields: [exchangeConnectionId], references: [id], onDelete: Cascade)
  botCoins             BotCoin[]
  createdAt            DateTime           @default(now())

  @@index([timeframeId])
  @@index([weightingSettingId])
  @@index([botCategoryId])
  @@index([exchangeConnectionId])
}

model User {
  id                  String               @id
  exchangeConnections ExchangeConnection[]
}
